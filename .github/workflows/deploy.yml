name: Deploy

env:
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  deploy:
    name: Deploy
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".tool-versions"

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Deploy to production
        if: ${{ startsWith(github.ref, 'refs/heads/main') }}
        env:
          FAUNA_GRAPHQL_HOST: ${{ secrets.FAUNA_GRAPHQL_HOST }}
          FAUNA_KEY: ${{ secrets.FAUNA_KEY }}
          IMAGEKIT_ID: ${{ secrets.IMAGEKIT_ID }}
        uses: netlify/actions/cli@master
        with:
          args: deploy --build --prod

      - name: Deploy preview
        id: deploy-preview
        if: ${{ github.event.pull_request.state == 'open' }}
        env:
          FAUNA_GRAPHQL_HOST: ${{ secrets.FAUNA_GRAPHQL_HOST }}
          FAUNA_KEY: ${{ secrets.FAUNA_KEY }}
          IMAGEKIT_ID: ${{ secrets.IMAGEKIT_ID }}
        uses: netlify/actions/cli@master
        with:
          args: deploy --build

      - name: Update comment on PR
        if: ${{ github.event.pull_request.state == 'open' }}
        uses: actions/github-script@v6
        with:
          script: |
            // Find previous comment
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const comment = comments.find(({ body }) => body.startsWith('Deployment preview ready!'));

            // Remove comment
            comment && await github.rest.issues.deleteComment({
              comment_id: comment.id,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            // Add comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Deployment preview ready!\n\n[${{ steps.deploy-preview.outputs.NETLIFY_LIVE_URL }}](${{ steps.deploy-preview.outputs.NETLIFY_LIVE_URL}})"
            });
